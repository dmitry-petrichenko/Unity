//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameTileTypeComponent gameTileType { get { return (GameTileTypeComponent)GetComponent(GameComponentsLookup.GameTileType); } }
    public bool hasGameTileType { get { return HasComponent(GameComponentsLookup.GameTileType); } }

    public void AddGameTileType(TileType newValue) {
        var index = GameComponentsLookup.GameTileType;
        var component = CreateComponent<GameTileTypeComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameTileType(TileType newValue) {
        var index = GameComponentsLookup.GameTileType;
        var component = CreateComponent<GameTileTypeComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTileType() {
        RemoveComponent(GameComponentsLookup.GameTileType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTileType;

    public static Entitas.IMatcher<GameEntity> GameTileType {
        get {
            if(_matcherGameTileType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTileType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTileType = matcher;
            }

            return _matcherGameTileType;
        }
    }
}
