//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateContext {

    public GameStateEntity globalSettingsEntity { get { return GetGroup(GameStateMatcher.GlobalSettings).GetSingleEntity(); } }
    public GlobalSettingsComponent globalSettings { get { return globalSettingsEntity.globalSettings; } }
    public bool hasGlobalSettings { get { return globalSettingsEntity != null; } }

    public GameStateEntity SetGlobalSettings(GlobalSettings newValue) {
        if(hasGlobalSettings) {
            throw new Entitas.EntitasException("Could not set GlobalSettings!\n" + this + " already has an entity with GlobalSettingsComponent!",
                "You should check if the context already has a globalSettingsEntity before setting it or use context.ReplaceGlobalSettings().");
        }
        var entity = CreateEntity();
        entity.AddGlobalSettings(newValue);
        return entity;
    }

    public void ReplaceGlobalSettings(GlobalSettings newValue) {
        var entity = globalSettingsEntity;
        if(entity == null) {
            entity = SetGlobalSettings(newValue);
        } else {
            entity.ReplaceGlobalSettings(newValue);
        }
    }

    public void RemoveGlobalSettings() {
        DestroyEntity(globalSettingsEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameStateEntity {

    public GlobalSettingsComponent globalSettings { get { return (GlobalSettingsComponent)GetComponent(GameStateComponentsLookup.GlobalSettings); } }
    public bool hasGlobalSettings { get { return HasComponent(GameStateComponentsLookup.GlobalSettings); } }

    public void AddGlobalSettings(GlobalSettings newValue) {
        var index = GameStateComponentsLookup.GlobalSettings;
        var component = CreateComponent<GlobalSettingsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGlobalSettings(GlobalSettings newValue) {
        var index = GameStateComponentsLookup.GlobalSettings;
        var component = CreateComponent<GlobalSettingsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGlobalSettings() {
        RemoveComponent(GameStateComponentsLookup.GlobalSettings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameStateMatcher {

    static Entitas.IMatcher<GameStateEntity> _matcherGlobalSettings;

    public static Entitas.IMatcher<GameStateEntity> GlobalSettings {
        get {
            if(_matcherGlobalSettings == null) {
                var matcher = (Entitas.Matcher<GameStateEntity>)Entitas.Matcher<GameStateEntity>.AllOf(GameStateComponentsLookup.GlobalSettings);
                matcher.componentNames = GameStateComponentsLookup.componentNames;
                _matcherGlobalSettings = matcher;
            }

            return _matcherGlobalSettings;
        }
    }
}
